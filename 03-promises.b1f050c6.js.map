{"mappings":"YAAA,IAAMA,EAASC,SAASC,cAAc,SAEhCC,EAAa,GA4BnB,SAASC,IAKP,OAJAD,EAAWE,MAAQC,OAAOC,MAAMC,cAAcC,SAASJ,MAAMK,OAC7DP,EAAWQ,KAAOL,OAAOC,MAAMC,cAAcC,SAASE,KAAKD,OAC3DP,EAAWS,OAASN,OAAOC,MAAMC,cAAcC,SAASG,OAAOF,OAExDP,C,CAGT,SAASU,EAAcC,EAAUT,GAC/B,OAAO,IAAIU,SAAQ,SAACC,EAASC,GAC7B,IAAMC,EAAgBC,KAAKC,SAAW,GAE1BC,YAAW,WACfH,EACJF,EAAS,CAAEF,WAAUT,UAErBY,EAAQ,CAAEH,WAAUT,S,GAChBA,E,IAzCVL,EAAOsB,iBAAiB,UAExB,SAA4Bf,GAC1BA,EAAMgB,iBAENnB,IAIA,IAFA,IAAMoB,EAAwBrB,EAAxBE,MAAOM,EAAiBR,EAAjBQ,KAAMC,EAAWT,EAAXS,OAEVa,EAAW,EAAGA,GAAYb,EAAQa,GAAY,EACrDZ,EAAcY,EAAUD,GACrBE,MAAK,SAAAC,G,IAAGb,EAAQa,EAARb,SAAUT,EAAKsB,EAALtB,MACjBuB,QAAQC,IAAI,uBAAwCC,OAAfhB,EAAS,QAAYgB,OAANzB,EAAM,M,IAE3D0B,OAAM,SAAAJ,G,IAAGb,EAAQa,EAARb,SAAUT,EAAKsB,EAALtB,MAClBuB,QAAQC,IAAI,sBAAqCC,OAAfhB,EAAS,QAAYgB,OAANzB,EAAM,M,IAGzDmB,GAASb,EAETJ,EAAMC,cAAcwB,O","sources":["src/js/03-promises.js"],"sourcesContent":["const formEl = document.querySelector('.form');\n\nconst promiseObj = {};\n\nlet timeoutId = null;\n\nformEl.addEventListener('submit', formSubmitHandler);\n\nfunction formSubmitHandler (event) {\n  event.preventDefault();\n\n  formValuesPicker();\n\n  let { delay, step, amount } = promiseObj;\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);      \n      }) \n\n      delay += step;\n\n      event.currentTarget.reset()\n  }     \n}\n\nfunction formValuesPicker () {\n  promiseObj.delay = Number(event.currentTarget.elements.delay.value);\n  promiseObj.step = Number(event.currentTarget.elements.step.value);\n  promiseObj.amount = Number(event.currentTarget.elements.amount.value);\n\n  return promiseObj;\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n\n  timeoutId = setTimeout(() => {\n      if (shouldResolve) {\n      resolve ({ position, delay });\n      } else {\n      reject ({ position, delay });\n      }}, delay)        \n  }) \n}"],"names":["$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$promiseObj","$ce04d3a99e08e73b$var$formValuesPicker","delay","Number","event","currentTarget","elements","value","step","amount","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","preventDefault","delay1","position1","then","param","console","log","concat","catch","reset"],"version":3,"file":"03-promises.b1f050c6.js.map"}